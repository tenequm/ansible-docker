---
- name: Ensure old versions of Docker are not installed.
  apt:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-engine

- name: Ensure depdencies are installed.
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Add Docker apt key.
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg id=9DC858229FC7DD38854AE2D88D81803C0EBFCD88
  register: add_repository_key
  ignore_errors: true

- name: Ensure curl is present (on older systems without SNI).
  package: name=curl state=present
  when: add_repository_key is failed

- name: Add Docker apt key (alternative for older systems without SNI).
  shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
  args:
    warn: no
  when: add_repository_key is failed

- name: Add Docker repository. [Debian]
  apt_repository: repo="deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
  when: ansible_distribution == "Debian"

- name: Add Docker repository. [Ubuntu]
  apt_repository: repo="deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
  when: ansible_distribution == "Ubuntu"

- name: Install Docker.
  apt: name=docker-ce

- name: Installing docker-compose.
  import_tasks: docker-compose.yml
  when: docker_compose_install

- name: Adding configurations.
  import_tasks: configurations.yml

- name: Ensure Docker is started and enabled at boot.
  service: name=docker state=started enabled=yes
